version: "3"

services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    networks:
      - orquestrator-services
    ports:
      - "27017:27017"

  postgres-db:
    image: postgres:16
    container_name: postgres-db
    networks:
      - orquestrator-services
    environment:
      POSTGRES_DB: postgres-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2503
    ports:
      - "5432:5432"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - orquestrator-services
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - orquestrator-services

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - orquestrator-services
    hostname: redis
    restart: unless-stopped

  redpanda-console:
    container_name: redpanda-console
    image: docker.redpanda.com/vectorized/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    ports:
      - "8081:8080"
    networks:
      - orquestrator-services
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:29092"]
    depends_on:
      - "kafka"

  kafka:
    container_name: kafka
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "9092:9092"
    networks:
      - orquestrator-services
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data

  payment-services:
    build: './payment-services'
    container_name: payment-services
    depends_on:
      - postgres-db
      - kafka
    networks:
      - orquestrator-services
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      DATASOURCES_DEFAULT_URL: jdbc:postgresql://postgres-db:5432/postgres-db
      DATASOURCES_DEFAULT_USERNAME: postgres
      DATASOURCES_DEFAULT_PASSWORD: 2503
    ports:
      - "8082:8082"

  table-services:
    build: './table-services'
    container_name: table-services
    depends_on:
      - mongodb
      - kafka
    networks:
      - orquestrator-services
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URI=mongodb://mongodb:27017/table-db
    ports:
      - "8083:8083"

  orquestrator-services:
    build: './orquestrator-services'
    container_name: orquestrator-services
    depends_on:
      - kafka
    networks:
      - orquestrator-services
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    ports:
      - "3000:3000"

networks:
  orquestrator-services:
    driver: bridge
